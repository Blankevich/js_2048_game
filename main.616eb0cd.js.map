{"version":3,"sources":["scripts/main.js"],"names":["board","score","document","querySelector","cells","querySelectorAll","button","messageWin","messageLose","messageStart","rows","columns","setGame","i","r","c","id","toString","num","updateTile","setTwo","hasEmptyTile","isFound","Math","floor","random","tile","getElementById","innerText","classList","add","lose","win","filterZero","row","filter","slide","roww","length","textContent","push","value","slideLeft","slideRight","reverse","slideUp","slideDown","remove","addEventListener","e","code"],"mappings":"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","file":"main.616eb0cd.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst score = document.querySelector('.game-score');\nconst cells = document.querySelectorAll('.field-cell');\nconst button = document.querySelector('.button');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\nconst messageStart = document.querySelector('.message-start');\n\nlet board;\nconst rows = 4;\nconst columns = 4;\n\nbutton.addEventListener('click', () => {\n  button.classList.remove('start');\n  button.classList.add('restart');\n  button.textContent = 'Restart';\n  score.textContent = '0';\n  messageStart.classList.add('hidden');\n  messageLose.classList.add('hidden');\n  messageStart.classList.add('hidden');\n\n  setGame();\n});\n\nfunction setGame() {\n  board = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  let i = 0;\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      cells[i].id = r.toString() + '-' + c.toString();\n\n      const num = board[r][c];\n\n      updateTile(cells[i], num);\n\n      i++;\n    }\n  }\n\n  setTwo();\n  setTwo();\n}\n\nfunction hasEmptyTile() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (board[r][c] === 0) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction setTwo() {\n  if (!hasEmptyTile()) {\n    return;\n  }\n\n  let isFound = false;\n\n  while (!isFound) {\n    const r = Math.floor(Math.random() * rows);\n    const c = Math.floor(Math.random() * columns);\n\n    if (board[r][c] === 0) {\n      board[r][c] = Math.random() < 0.1 ? 4 : 2;\n\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n\n      tile.innerText = '2';\n      tile.classList.add('field-cell--2');\n      isFound = true;\n    }\n  }\n  lose();\n  win();\n}\n\ndocument.addEventListener('keyup', (e) => {\n  if (e.code === 'ArrowLeft') {\n    slideLeft();\n    setTwo();\n  } else if (e.code === 'ArrowRight') {\n    slideRight();\n    setTwo();\n  } else if (e.code === 'ArrowUp') {\n    slideUp();\n    setTwo();\n  } else if (e.code === 'ArrowDown') {\n    slideDown();\n    setTwo();\n  }\n});\n\nfunction filterZero(row) {\n  return row.filter(num => num !== 0);\n}\n\nfunction slide(row) {\n  let roww = filterZero(row);\n\n  for (let i = 0; i < roww.length; i++) {\n    if (roww[i] === roww[i + 1]) {\n      roww[i] *= 2;\n      roww[i + 1] = 0;\n      score.textContent = `${+score.textContent + roww[i]}`;\n    }\n  }\n\n  roww = filterZero(roww);\n\n  while (roww.length < columns) {\n    roww.push(0);\n  }\n\n  return roww;\n}\n\nfunction updateTile(tile, num) {\n  tile.innerText = '';\n  tile.classList.value = '';\n  tile.classList.add('field-cell');\n\n  if (num > 0) {\n    tile.innerText = num;\n    tile.classList.add(`field-cell--${num}`);\n  }\n}\n\nfunction slideLeft() {\n  for (let r = 0; r < rows; r++) {\n    let row = board[r];\n\n    row = slide(row);\n    board[r] = row;\n\n    for (let c = 0; c < columns; c++) {\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n}\n\nfunction slideRight() {\n  for (let r = 0; r < rows; r++) {\n    let row = board[r];\n\n    row.reverse();\n    row = slide(row);\n    row.reverse();\n    board[r] = row;\n\n    for (let c = 0; c < columns; c++) {\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n}\n\nfunction slideUp() {\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    row = slide(row);\n    board[0][c] = row[0];\n    board[1][c] = row[1];\n    board[2][c] = row[2];\n    board[3][c] = row[3];\n\n    for (let r = 0; r < rows; r++) {\n      const tile = document.getElementById(`${r}-${c}`);\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n}\n\nfunction slideDown() {\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    row.reverse();\n    row = slide(row);\n    row.reverse();\n    board[0][c] = row[0];\n    board[1][c] = row[1];\n    board[2][c] = row[2];\n    board[3][c] = row[3];\n\n    for (let r = 0; r < rows; r++) {\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n}\n\nfunction lose() {\n  if (hasEmptyTile()) {\n    return;\n  }\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns - 1; c++) {\n      if (board[c][r] === board[c + 1][r] || board[r][c] === board[r][c + 1]) {\n        return;\n      }\n    }\n  }\n\n  messageLose.classList.remove('hidden');\n}\n\nfunction win() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (board[r][c] === 2048) {\n        messageWin.classList.remove('hidden');\n      }\n    }\n  }\n}\n"]}